# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import variablebatch_pb2 as variablebatch__pb2


class VariableBatchStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVariableBatch = channel.unary_unary(
            '/VariableBatch/GetVariableBatch',
            request_serializer=variablebatch__pb2.GetVariableBatchRequest.SerializeToString,
            response_deserializer=variablebatch__pb2.GetVariableBatchReply.FromString,
        )


class VariableBatchServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVariableBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VariableBatchServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetVariableBatch': grpc.unary_unary_rpc_method_handler(
            servicer.GetVariableBatch,
            request_deserializer=variablebatch__pb2.GetVariableBatchRequest.FromString,
            response_serializer=variablebatch__pb2.GetVariableBatchReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'VariableBatch', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class VariableBatch(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVariableBatch(request,
                         target,
                         options=(),
                         channel_credentials=None,
                         call_credentials=None,
                         insecure=False,
                         compression=None,
                         wait_for_ready=None,
                         timeout=None,
                         metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VariableBatch/GetVariableBatch',
                                             variablebatch__pb2.GetVariableBatchRequest.SerializeToString,
                                             variablebatch__pb2.GetVariableBatchReply.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
